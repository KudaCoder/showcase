# Generated by Django 3.1.5 on 2021-01-19 15:42

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Assessor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, db_index=True, max_length=150, null=True)),
                ('scheme_number', models.CharField(blank=True, db_index=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'assessor',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Complexity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.CharField(max_length=10, null=True)),
            ],
            options={
                'db_table': 'complexity',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Employer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, db_index=True, max_length=150, null=True)),
                ('address', models.CharField(blank=True, db_index=True, max_length=500, null=True)),
            ],
            options={
                'db_table': 'employer',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Environment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'environment',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Heating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, max_length=150, null=True)),
            ],
            options={
                'db_table': 'heating',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Postcode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('postcode', models.CharField(blank=True, db_index=True, max_length=10, null=True)),
            ],
            options={
                'db_table': 'postcode',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RRN',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rrn', models.CharField(blank=True, db_index=True, max_length=30, null=True)),
            ],
            options={
                'db_table': 'rrn',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Scheme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accred_scheme', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'scheme',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(blank=True, db_index=True, max_length=500, null=True)),
            ],
            options={
                'db_table': 'site',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, db_index=True, max_length=25, null=True)),
            ],
            options={
                'db_table': 'type',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Certificate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('epc_rating', models.IntegerField(null=True)),
                ('building_area', models.IntegerField()),
                ('building_emissions', models.DecimalField(decimal_places=2, max_digits=6)),
                ('energy_usage', models.DecimalField(decimal_places=2, max_digits=6)),
                ('refrig_weight', models.IntegerField()),
                ('ac_output', models.IntegerField()),
                ('annual_heating', models.CharField(blank=True, max_length=50, null=True)),
                ('renewable_heating', models.CharField(blank=True, max_length=50, null=True)),
                ('annual_electric', models.CharField(blank=True, max_length=50, null=True)),
                ('typical_heating', models.CharField(blank=True, max_length=50, null=True)),
                ('typical_electric', models.CharField(blank=True, max_length=50, null=True)),
                ('renewable_electric', models.CharField(blank=True, max_length=50, null=True)),
                ('expiry', models.DateField(db_index=True)),
                ('manager', models.CharField(blank=True, max_length=100, null=True)),
                ('assessor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='register.assessor')),
                ('complexity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='register.complexity')),
                ('employer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='register.employer')),
                ('environment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='register.environment')),
                ('heating', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='register.heating')),
                ('postcode', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='register.postcode')),
                ('rrn', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='register.rrn')),
                ('scheme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='register.scheme')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='register.site')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='register.type')),
            ],
            options={
                'db_table': 'certificate',
                'managed': True,
            },
        ),
    ]
